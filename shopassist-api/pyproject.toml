[tool.poetry]
name = "shopassist-api"
version = "0.1.0"
description = "AI-Powered Product Knowledge & Support Agent API"
authors = ["Jose Valdes <jmurguia@gmail.com>"]
readme = "README.md"
packages = [{include = "shopassist_api"}]
# package-mode = true is the default, enables building distributable packages

[tool.poetry.dependencies]
python = "^3.12"
# Core dependencies for packaging (minimal set)
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
# Note: Full dependencies are in ../environment.yml for development

[tool.poetry.group.dev.dependencies]
# Development dependencies are managed via conda environment.yml
pytest = {version = "^7.4.0", optional = true}
black = {version = "^23.10.0", optional = true}
isort = {version = "^5.12.0", optional = true}

[tool.poetry.scripts]
# CLI commands for the package
shopassist-server = "shopassist_api.main:main"
shopassist-dev = "dev_server:main"

[tool.poetry.extras]
# Optional dependency groups
dev = ["pytest", "black", "isort"]
azure = ["azure-ai-projects", "azure-identity", "azure-search-documents"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["shopassist_api"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --tb=short"
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
